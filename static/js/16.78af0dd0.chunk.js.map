{"version":3,"sources":["Screens/LoginPage/LoginPage.js"],"names":["DISCOVERY_DOCS","LoginPage","toggleUser","useContext","updateUserContext","useState","isGapiLoaded","setisGapiLoaded","dataLoading","setdataLoading","youtubeResponse","setyoutubeResponse","peopleResponse","setpeopleResponse","initClient","window","gapi","client","init","apiKey","process","clientId","discoveryDocs","scope","then","catch","Modal","warning","title","a","people","get","resourceName","personFields","response","warn","content","youtube","playlistItems","list","part","maxResults","playlistId","useEffect","load","url","userDetails","axios","post","status","data","error","result","userID","localStorage","setItem","token","className","onClick","auth2","getAuthInstance","signIn","fetchDataFromAPI","spinning","indicator","style","fontSize","color","spin","alt","src","to"],"mappings":"qPAeMA,EAAiB,CAAC,+DAAgE,4DA8HzEC,UA3Hf,WACI,IAAMC,EAAaC,qBAAWC,KAC9B,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8CJ,oBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA4CN,oBAAS,GAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEA,SAASC,IACLC,OAAOC,KAAKC,OAAOC,KAAK,CACpBC,OAAQC,0CACRC,SAAUD,2EACVE,cAAetB,EACfuB,MAdG,sMAeJC,MAAK,WACJjB,GAAgB,MACjBkB,OAAM,WACLC,IAAMC,QAAQ,CAAEC,MAAO,sGAhBd,4CAwBjB,sBAAAC,EAAA,sDACId,OAAOC,KAAKC,OAAOa,OAAOA,OAAOC,IAAI,CACjCC,aAAc,YACdC,aAAc,yBACfT,MAAK,SAACU,GACLrB,EAAkBqB,MACnBT,OAAM,WACLhB,GAAe,GACfiB,IAAMS,KAAK,CAAEC,QAAS,6CAG1BrB,OAAOC,KAAKC,OAAOoB,QAAQC,cAAcC,KAAK,CAC1CC,KAAM,CAAC,0BACPC,WAAY,GACZC,WAAY,OACblB,MAAK,SAACU,GACLvB,EAAmBuB,MACpBT,OAAM,WACLhB,GAAe,GACfiB,IAAMS,KAAK,CAAEC,QAAS,6CAnB9B,4CAxBiB,sBA0EjB,OAtDAO,qBAAU,WACN5B,OAAOC,KAAK4B,KAAK,eAAgB9B,KAClC,IAyBH6B,qBAAU,WACN,IAAwB,IAApBjC,IAAgD,IAAnBE,EAA0B,CACvD,IAAMiC,EAAG,UAAMzB,yCAAN,aACH0B,EAAc,CAChBpC,kBACAE,kBAEJmC,IAAMC,KAAKH,EAAKC,GAAatB,MAAK,SAACU,GACP,MAApBA,EAASe,SAA0C,IAAxBf,EAASgB,KAAKC,QACzCjD,EAAWgC,EAASgB,KAAKE,OAAOC,QAChCC,aAAaC,QAAQ,WAAYrB,EAASgB,KAAKE,OAAOC,QACtDC,aAAaC,QAAQ,QAASrB,EAASgB,KAAKE,OAAOI,WAExD/B,OAAM,WACLhB,GAAe,GACfiB,IAAMS,KAAK,CAAEC,QAAS,gDAG/B,CAAC1B,EAAiBE,IAUjB,qBAAK6C,UAAU,uBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAf,oBAEJ,qBAAKA,UAAU,mBAAf,UAEyB,IAAjBnD,EACE,sBAAKmD,UAAU,gBAAgBC,QAlB7D,WACI3C,OAAOC,KAAK2C,MAAMC,kBAAkBC,SAASrC,MAAK,WAC9Cf,GAAe,GArEN,mCAsETqD,OAesB,UAEMtD,EACE,cAAC,IAAD,CACEuD,SAAUvD,EACVwD,UAAW,cAAC,IAAD,CAAiBC,MAAO,CAAEC,SAAU,GAAIC,MAAO,mBAAqBC,MAAI,MAErF,qBAAKC,IAAI,GAAGC,IAAI,gFAPxB,yBAWA,qBAAKb,UAAU,gBAAf,6BAId,sBAAKA,UAAU,8BAAf,UACI,cAAC,IAAD,CAAMc,GAAG,kBAAT,SACI,qBAAKd,UAAU,mBAAf,8BAEJ,cAAC,IAAD,CAAMc,GAAG,kBAAT,SACI,qBAAKd,UAAU,mBAAf,SAAmC,+BAI/C,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,qBACIY,IAAI,yBACJC,IAAG,UAAKlD,IAAL,wBACHqC,UAAU","file":"static/js/16.78af0dd0.chunk.js","sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useContext,\n} from 'react';\nimport './LoginPage.css';\nimport {\n    Modal,\n    Spin,\n} from 'antd';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { updateUserContext } from '../../StateManagement/UserContext';\n\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest', 'https://people.googleapis.com/$discovery/rest?version=v1'];\nconst SCOPES = 'https://www.googleapis.com/auth/youtube.readonly https://www.googleapis.com/auth/user.gender.read https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile';\n\nfunction LoginPage() {\n    const toggleUser = useContext(updateUserContext);\n    const [isGapiLoaded, setisGapiLoaded] = useState(false);\n    const [dataLoading, setdataLoading] = useState(false);\n    const [youtubeResponse, setyoutubeResponse] = useState(false);\n    const [peopleResponse, setpeopleResponse] = useState(false);\n\n    function initClient() {\n        window.gapi.client.init({\n            apiKey: process.env.REACT_APP_API_KEY,\n            clientId: process.env.REACT_APP_CLIENT_ID,\n            discoveryDocs: DISCOVERY_DOCS,\n            scope: SCOPES,\n        }).then(() => {\n            setisGapiLoaded(true);\n        }).catch(() => {\n            Modal.warning({ title: 'Make sure cookies are enabled, and you are browsing via https scheme, and not via http scheme.' });\n        });\n    }\n\n    useEffect(() => {\n        window.gapi.load('client:auth2', initClient);\n    }, []);\n\n    async function fetchDataFromAPI() {\n        window.gapi.client.people.people.get({\n            resourceName: 'people/me',\n            personFields: 'names,photos,genders',\n        }).then((response) => {\n            setpeopleResponse(response);\n        }).catch(() => {\n            setdataLoading(false);\n            Modal.warn({ content: 'Please check your network connection.' });\n            // console.log('PEOPLE API', err);\n        });\n        window.gapi.client.youtube.playlistItems.list({\n            part: ['snippet,contentDetails'],\n            maxResults: 50,\n            playlistId: 'LL',\n        }).then((response) => {\n            setyoutubeResponse(response);\n        }).catch(() => {\n            setdataLoading(false);\n            Modal.warn({ content: 'Please check your network connection.' });\n            // console.log('YOUTUBE API', err);\n        });\n    }\n    useEffect(() => {\n        if (youtubeResponse !== false && peopleResponse !== false) {\n            const url = `${process.env.REACT_APP_SERVER_PROD_URL}/v1/login`;\n            const userDetails = {\n                youtubeResponse,\n                peopleResponse,\n            };\n            axios.post(url, userDetails).then((response) => {\n                if (response.status === 200 && response.data.error === false) {\n                    toggleUser(response.data.result.userID);\n                    localStorage.setItem('currUser', response.data.result.userID);\n                    localStorage.setItem('token', response.data.result.token);\n                }\n            }).catch(() => {\n                setdataLoading(false);\n                Modal.warn({ content: 'Please check your network connection.' });\n            });\n        }\n    }, [youtubeResponse, peopleResponse]);\n\n    function handleSignInClick() {\n        window.gapi.auth2.getAuthInstance().signIn().then(() => {\n            setdataLoading(true);\n            fetchDataFromAPI();\n        });\n    }\n\n    return (\n        <div className='login-page-container'>\n            <div className='login-container'>\n                <div className='login-right-container'>\n                    <div className='login-card'>\n                        <div className='login-card-upper'>\n                            <div className='login-play-text'>play</div>\n                        </div>\n                        <div className='login-card-lower'>\n                            {\n                                isGapiLoaded === true\n                                ? <div className='google-button' onClick={handleSignInClick}>\n                                    {\n                                        dataLoading\n                                        ? <Spin\n                                            spinning={dataLoading}\n                                            indicator={<LoadingOutlined style={{ fontSize: 25, color: 'rgb(15, 20, 25)' }} spin />}\n                                        />\n                                        : <img alt='' src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'/>\n                                    }\n                                    Sign up with Google\n                                </div>\n                                : <div className='google-button'>Loading...</div>\n                            }\n                        </div>\n                    </div>\n                    <div className='login-additionals-container'>\n                        <Link to='/privacy-policy'>\n                            <div className='additionals-text'>Privary Policy</div>\n                        </Link>\n                        <Link to='/privacy-policy'>\n                            <div className='additionals-text'>{'Terms & Conditions'}</div>\n                        </Link>\n                    </div>\n                </div>\n                <div className='login-left-container'>\n                    <div className='login-picture-container'>\n                        <img\n                            alt='random social pictures'\n                            src={`${process.env.PUBLIC_URL}/social_picture.webp`}\n                            className='login-picture'\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"sourceRoot":""}